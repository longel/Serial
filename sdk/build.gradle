apply plugin: 'com.android.library'

def compileForSo = true

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        if (compileForSo) {
            ndk {
                externalNativeBuild {
                    cmake {
                        abiFilters 'armeabi', 'armeabi-v7a', 'x86_64', 'x86' //反注释这里，可以用x86虚拟机运行
                    }
                }
            }
        } else {
            ndk {
                abiFilters "armeabi", "armeabi-v7a", 'x86'
            }
        }
    }

    if (compileForSo) {
        externalNativeBuild {
            cmake {
                path "CMakeLists.txt"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {//解决本地化不完全
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api "com.android.support:appcompat-v7:${rootProject.ext.supportVersion}"
    api "com.android.support.constraint:constraint-layout:${rootProject.ext.constraintLayout}"
    api "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxAndroid}"
    api "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxJava}"
    api "org.greenrobot:eventbus:${rootProject.ext.eventBus}"
    api "com.google.code.gson:gson:${rootProject.ext.gson}"
    api "com.qmuiteam:qmui:${rootProject.ext.qmui}"
}
